[toc]

# 概述

---

> https://cui-jiacai.gitbook.io/c++-stl-tutorial



> STL包含什么？

STL是一个基于模版实现的标准模板库，包含容器类模版、算法模版和迭代器模版。

其中迭代器是指向容器的元素，是容器和算法之间的桥梁。

![image-20250117235829002](https://gitee.com/OooAlex/study_note/raw/master/img/202501172358157.png)



## 容器(Container)

### vector<元素类型>

快速访问任意位置的元素，主要在元素序列的尾部增加/删除元素

用动态数组实现

### list<元素类型>

在元素序列中任意位置上插入/删除元素

用双向链表实现

> [!NOTE]
>
> C++11中增加了`forward_list`容器，本质上是一个**单向链表**，定义在头文件`forward_list`中。

### deque<元素类型>

在元素序列的两端增加/删除元素，快速访问任意位置的元素

用**分段的连续空间结构**实现

### stack<元素类型>

仅在元素序列的尾部增加/删除元素

可基于`deque`、`list`或`vector`来实现

### queue<元素类型>

仅在元素序列的尾部增加、头部删除元素

可基于`deque`和`list`来实现。

### priority_queue<元素类型>

每次增加/删除元素之后，对元素位置进行调整，使得头部元素总是最大的。也就是说，每次删除操作总是从头部把最大（优先级最高）的元素去掉。

可基于`deque`和`vector`来实现

### map<key，value> 和 multimap<key，value>

根据key来访问元素，容器中每个元素是一个`pair<key, value>`结构

对于`map`，不同元素的关键字不能相同；对于`multimap`，不同元素的关键字可以相同。

常用某种**二叉树**来实现

> [!NOTE]
>
> 有时候我们不需要排序，所以C++11中新增加了`unordered_map`
>
> 和`unordered_multimap`容器。

### set<元素类型> 和 multiset<元素类型>

它们分别是`map`和`multimap`的特例，每个元素只有key而没有value

> [!NOTE]
>
> C++11中增加了`unordered_set`和`unordered_multiset`容器。

### basic_string<字符类型>

与`vector`类似，不同之处在于其元素为字符类型

`string`和`wstring`分别是它的两个实例：

- `basic_string<char>`
- `basic_string<wchar_t>`



## 迭代器(Iterator)

